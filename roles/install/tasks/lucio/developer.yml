# developer tasks file for shokohscrole
---
# https://docs.ansible.com/ansible/latest/modules/sysctl_module.html
# https://www.elastic.co/guide/en/elasticsearch/reference/7.5/docker.html#docker-prod-prerequisites
# Elasticsearch container requirement
- name: System VM maximum map count
  sysctl:
    name: vm.max_map_count
    value: '262144'
  become: yes

# https://docs.ansible.com/ansible/latest/modules/docker_network_module.html
- name: Define docker hidden network
  docker_network:
    name: hidden
    internal: yes
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/docker_volume_module.html
- name: Define elasticsearch docker volume
  docker_volume:
    name: elasticsearch_data
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Elasticsearch docker container
  docker_container:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:{{ elk_version }}'
    name: elasticsearch
    hostname: elasticsearch
    networks_cli_compatible: yes
    purge_networks: yes
    networks:
      - name: hidden
    env:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
    restart_policy: unless-stopped
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Kibana docker container
  docker_container:
    image: 'docker.elastic.co/kibana/kibana:{{ elk_version }}'
    name: kibana
    hostname: kibana
    networks_cli_compatible: yes
    purge_networks: yes
    networks:
      - name: hidden
      - name: '{{ docker_network }}'
    env:
      SERVER_NAME: kibana
      LOGGING_QUIET: 'true'
    restart_policy: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.frontend.rule: 'Host:kibana.lucio.home'
      traefik.docker.network: '{{ docker_network }}'
      traefik.port: '5601'
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/copy_module.html
- name: Copy logstash configuration file
  copy:
    src: logstash/
    dest: '/home/{{ ansible_user }}/logstash/'

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Logstash docker container
  docker_container:
    image: 'docker.elastic.co/logstash/logstash:{{ elk_version }}'
    name: logstash
    hostname: logstash
    networks_cli_compatible: yes
    purge_networks: yes
    networks:
      - name: hidden
      - name: '{{ docker_network }}'
    ports:
      - '5044:5044/tcp'
    env:
      LOG_LEVEL: warn
    restart_policy: unless-stopped
    volumes:
      - "/home/{{ ansible_user }}/logstash:/usr/share/logstash/pipeline"
    labels:
      traefik.enable: 'false'
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"
