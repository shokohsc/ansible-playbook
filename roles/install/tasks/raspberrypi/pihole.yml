# pihole tasks file for shokohscrole
# https://pi-hole.net/
# https://docs.pi-hole.net/
# https://github.com/pi-hole/pi-hole
# https://github.com/pi-hole/docker-pi-hole/issues/378
# https://github.com/pi-hole/docker-pi-hole
# https://docs.pi-hole.net/guides/dns-over-https/
# https://github.com/crazy-max/docker-cloudflared
# https://github.com/crazy-max/docker-cloudflared/blob/master/examples/pihole/docker-compose.yml
# https://docs.pi-hole.net/docker/DHCP/#docker-pi-hole-with-host-networking-mode
# https://discourse.pi-hole.net/t/dhcp-with-docker-compose-and-bridge-networking/17038
# https://github.com/chriscrowe/docker-pihole-unbound
---
# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: DHCP relay docker container
  docker_container:
    image: dhcp-relay:latest
    name: dhcp-relay
    hostname: dhcp-relay
    network_mode: host
    command: -s 172.1.0.73
    capabilities:
      - net_admin
    restart_policy: unless-stopped
    log_driver: json-file
    log_options:
      max-size: '50k'
      max-file: '2'
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/copy_module.html
- name: Copy pihole container volumes directory
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    force: no
  with_items:
    - { src: 'pihole/', dest: "/home/{{ ansible_user }}/pihole/pihole/"}
    - { src: 'dnsmasq.d/', dest: "/home/{{ ansible_user }}/pihole/dnsmasq.d/"}
  become: yes

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Pihole docker container
  docker_container:
    image: pihole/pihole:latest
    name: pihole
    hostname: pihole
    networks_cli_compatible: yes
    purge_networks: yes
    networks:
      - name: pihole
        ipv4_address: 172.1.0.73
    env:
      TZ: Europe/Paris
      DNS1: 172.1.0.63#5053
      DNS2: 1.1.1.1
      WEBPASSWORD: "{{ lookup('env', 'PIHOLE_PASSWORD') }}"
      VIRTUAL_HOST: pihole.shokohsc.home
      DNSMASQ_LISTENING: all
    ports:
      - '53:53/tcp'
      - '53:53/udp'
    dns_servers:
      - 127.0.0.1
      - 1.1.1.1
    capabilities:
      - net_admin
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    restart_policy: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.docker.network: 'pihole'
      traefik.frontend.rule: 'Host:pihole.pi.home,AddPrefix:/admin'
      traefik.port: '80'
    log_driver: json-file
    log_options:
      max-size: '50k'
      max-file: '2'
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"
