# pihole tasks file for shokohscrole
# https://pi-hole.net/
# https://docs.pi-hole.net/
# https://github.com/pi-hole/pi-hole
# https://github.com/pi-hole/docker-pi-hole/issues/378
# https://github.com/pi-hole/docker-pi-hole
# https://docs.pi-hole.net/guides/dns-over-https/
# https://github.com/crazy-max/docker-cloudflared
# https://github.com/crazy-max/docker-cloudflared/blob/master/examples/pihole/docker-compose.yml
# https://docs.pi-hole.net/docker/DHCP/#docker-pi-hole-with-host-networking-mode
# https://discourse.pi-hole.net/t/dhcp-with-docker-compose-and-bridge-networking/17038
# https://github.com/chriscrowe/docker-pihole-unbound
---
# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: DHCP relay docker container
  docker_container:
    image: dhcp-relay:latest
    name: dhcp-relay
    hostname: dhcp-relay
    network_mode: host
    command: -s 172.2.0.73
    capabilities:
      - net_admin
    restart_policy: unless-stopped
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name: Create a directory if it does not exist
  file:
    path: "/home/{{ ansible_user }}/pihole/dnsmasq.d"
    state: directory
    mode: '0755'
  become: yes

# https://docs.ansible.com/ansible/latest/modules/file_module.html
- name: Create a directory if it does not exist
  file:
    path: "/home/{{ ansible_user }}/pihole/pihole"
    state: directory
    mode: '0775'
  become: yes

# # https://docs.ansible.com/ansible/latest/modules/template_module.html
# # https://www.mydailytutorials.com/ansible-template-module-examples/
# # https://jinja.palletsprojects.com/en/2.10.x/
# - name: Template pihole dhcp server config file
#   template:
#     src: dnsmasq.d/02-pihole-dhcp.conf.j2
#     dest: "/home/{{ ansible_user }}/pihole/dnsmasq.d/02-pihole-dhcp.conf"
#   become: yes

# # https://docs.ansible.com/ansible/latest/modules/template_module.html
# # https://www.mydailytutorials.com/ansible-template-module-examples/
# # https://jinja.palletsprojects.com/en/2.10.x/
# - name: Template dnsmasq static dhcp config file
#   template:
#     src: dnsmasq.d/04-pihole-static-dhcp.conf.j2
#     dest: "/home/{{ ansible_user }}/pihole/dnsmasq.d/04-pihole-static-dhcp.conf"
#   become: yes

# https://docs.ansible.com/ansible/latest/modules/template_module.html
# https://www.mydailytutorials.com/ansible-template-module-examples/
# https://jinja.palletsprojects.com/en/2.10.x/
- name: Template dnsmasq domains config file
  template:
    src: dnsmasq.d/53-ansible-install-options.conf.j2
    dest: "/home/{{ ansible_user }}/pihole/dnsmasq.d/53-ansible-install-options.conf"
  become: yes

# https://docs.ansible.com/ansible/latest/modules/template_module.html
# https://www.mydailytutorials.com/ansible-template-module-examples/
# https://jinja.palletsprojects.com/en/2.10.x/
- name: Pihole setup vars file
  template:
    src: pihole/setupVars.conf.j2
    dest: "/home/{{ ansible_user }}/pihole/pihole/setupVars.conf"
  become: yes

# https://docs.ansible.com/ansible/latest/modules/copy_module.html
- name: Copy pihole container volumes directory
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    force: no
  with_items:
    - { src: 'pihole/', dest: "/home/{{ ansible_user }}/pihole/pihole/"}
  become: yes

# https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
- name: Pihole docker container
  docker_container:
    image: pihole/pihole:latest
    pull: true
    name: pihole
    hostname: pihole
    networks_cli_compatible: yes
    purge_networks: yes
    networks:
      - name: '{{ docker_network }}'
        ipv4_address: 172.2.0.73
    env:
      TZ: Europe/Paris
      DNS1: 172.2.0.63#5053
      WEBPASSWORD: "{{ lookup('env', 'PIHOLE_PASSWORD') }}"
      VIRTUAL_HOST: pihole.shokohsc.home
      DNSMASQ_LISTENING: all
    ports:
      - '53:53/tcp'
      - '53:53/udp'
    dns_servers:
      - 127.0.0.1
      - 1.1.1.1
    capabilities:
      - net_admin
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    restart_policy: unless-stopped
    labels:
      autoheal: 'true'
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:pihole.shokohsc.home;AddPrefix:/admin"
      traefik.docker.network: "pihole"
      traefik.port: '80'
  vars:
    ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"

# # https://docs.ansible.com/ansible/latest/modules/docker_container_module.html
# - name: Pihole exporter docker container
#   docker_container:
#     image: ekofr/pihole-exporter:latest
#     name: pihole-exporter
#     hostname: pihole-exporter
#     networks_cli_compatible: yes
#     purge_networks: yes
#     networks:
#       - name: '{{ docker_network }}'
#     env:
#       PIHOLE_HOSTNAME: pihole
#       DNS1: 172.2.0.63#5053
#       PIHOLE_PASSWORD: "{{ lookup('env', 'PIHOLE_PASSWORD') }}"
#       INTERVAL: '10s'
#       PORT: '9617'
#     restart_policy: unless-stopped
#     labels:
#       traefik.enable: 'true'
#       traefik.frontend.rule: 'Host:pihole-exporter.pi.home'
#       traefik.port: '9617'
#   vars:
#     ansible_python_interpreter: "{{ '/usr/bin/env python-docker' }}"
