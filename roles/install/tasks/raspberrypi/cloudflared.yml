# cloudflared tasks file for shokohscrole
# https://docs.pi-hole.net/guides/dns-over-https/
---
# https://docs.ansible.com/ansible/latest/modules/apt_module.html
# apt --help
- name: Install cloudflared dependencies
  apt:
    pkg:
    - tar
    - wget
  become: yes

# https://docs.ansible.com/ansible/latest/modules/unarchive_module.html
# tar --help
- name: Download & unarchive cloudflared-stable-linux-arm archive
  unarchive:
    src: https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-linux-arm.tgz
    dest: /home/{{ ansible_user }}

# https://docs.ansible.com/ansible/latest/modules/copy_module.html
# cp --help
- name: Copy cloudflared to /usr/local/bin
  copy:
    src: /home/{{ ansible_user }}/cloudflared
    dest: /usr/local/bin
    mode: '0755'
    owner: cloudflared
    group: cloudflared
  become: yes

# https://docs.ansible.com/ansible/latest/modules/command_module.html
- name: Cloudfared version
  command: /usr/local/bin/cloudflared -v

# https://docs.ansible.com/ansible/latest/modules/user_module.html
# useradd --help
- name: Create cloudflared user to run the daemon
  user:
    name: cloudflared
    system: yes
    create_home: no
    shell: /usr/sbin/nologin
  become: yes

# https://docs.ansible.com/ansible/latest/modules/blockinfile_module.html
- name: Create a configuration file for cloudflared
  blockinfile:
    path: /etc/default/cloudflared
    block: |
      # Commandline args for cloudflared
      CLOUDFLARED_OPTS=--port 5053 --upstream https://1.1.1.1/dns-query --upstream https://1.0.0.1/dns-query
    create: yes
    owner: cloudflared
    group: cloudflared
  become: yes

# https://docs.ansible.com/ansible/latest/modules/blockinfile_module.html
- name: Create a service file for cloudflared
  blockinfile:
    path: /etc/systemd/system/cloudflared.service
    block: |
      [Unit]
      Description=cloudflared DNS over HTTPS proxy
      After=syslog.target network-online.target

      [Service]
      Type=simple
      User=cloudflared
      EnvironmentFile=/etc/default/cloudflared
      ExecStart=/usr/local/bin/cloudflared proxy-dns $CLOUDFLARED_OPTS
      Restart=on-failure
      RestartSec=10
      KillMode=process

      [Install]
      WantedBy=multi-user.target
    create: yes
    owner: cloudflared
    group: cloudflared
  become: yes

# https://docs.ansible.com/ansible/latest/modules/systemd_module.html
- name: Enable and start cloudflared service
  systemd:
    name: cloudflared
    enabled: yes
    state: started
  become: yes
